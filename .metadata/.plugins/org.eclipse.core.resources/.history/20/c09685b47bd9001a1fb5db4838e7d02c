package com.silencer.entityHibernate;
// Generated Aug 8, 2020 3:33:11 PM by Hibernate Tools 5.2.12.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name="customer"
    ,catalog="freydevikdb"
)
public class Customer  implements java.io.Serializable {


     private Integer costomerId;
     private String email;
     private String fullName;
     private String address;
     private String city;
     private String country;
     private String phone;
     private String zipcode;
     private String password;
     private Date registerDate;
     private Set<SilencerOrder> silencerOrders = new HashSet<SilencerOrder>(0);

    public Customer() {
    }

	
    public Customer(String email, String fullName, String address, String city, String country, String phone, String zipcode, String password, Date registerDate) {
        this.email = email;
        this.fullName = fullName;
        this.address = address;
        this.city = city;
        this.country = country;
        this.phone = phone;
        this.zipcode = zipcode;
        this.password = password;
        this.registerDate = registerDate;
    }
    public Customer(String email, String fullName, String address, String city, String country, String phone, String zipcode, String password, Date registerDate, Set<SilencerOrder> silencerOrders) {
       this.email = email;
       this.fullName = fullName;
       this.address = address;
       this.city = city;
       this.country = country;
       this.phone = phone;
       this.zipcode = zipcode;
       this.password = password;
       this.registerDate = registerDate;
       this.silencerOrders = silencerOrders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="costomer_id", unique=true, nullable=false)
    public Integer getCostomerId() {
        return this.costomerId;
    }
    
    public void setCostomerId(Integer costomerId) {
        this.costomerId = costomerId;
    }

    
    @Column(name="email", nullable=false, length=64)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="full_name", nullable=false, length=45)
    public String getFullName() {
        return this.fullName;
    }
    
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    
    @Column(name="address", nullable=false, length=128)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="city", nullable=false, length=32)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="country", nullable=false, length=64)
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    
    @Column(name="phone", nullable=false, length=15)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="zipcode", nullable=false, length=15)
    public String getZipcode() {
        return this.zipcode;
    }
    
    public void setZipcode(String zipcode) {
        this.zipcode = zipcode;
    }

    
    @Column(name="password", nullable=false, length=20)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="register_date", nullable=false, length=19)
    public Date getRegisterDate() {
        return this.registerDate;
    }
    
    public void setRegisterDate(Date registerDate) {
        this.registerDate = registerDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<SilencerOrder> getSilencerOrders() {
        return this.silencerOrders;
    }
    
    public void setSilencerOrders(Set<SilencerOrder> silencerOrders) {
        this.silencerOrders = silencerOrders;
    }




}


